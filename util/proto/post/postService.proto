syntax = "proto3";

option go_package = "github.com/XWS-BSEP-TIM1-2022/dislinkt/util/proto/post";

package post;

import "google/api/annotations.proto";

service PostService {
  rpc GetRequest (PostIdRequest) returns (PostResponse) {
    option(google.api.http) = {
      get: "/posts/{id}"
    };
  };

  rpc GetAllRequest (EmptyRequest) returns (PostsResponse) {
    option(google.api.http) = {
      get: "/posts"
    };
  };

  rpc GetAllFromUserRequest (UserPostsRequest) returns (PostsResponse) {
    option(google.api.http) = {
      get: "/users/{userId}/posts"
    };
  };

  rpc CreateRequest (PostRequest) returns (PostResponse) {
    option(google.api.http) = {
      post: "/posts"
      body: "post"
    };
  };

  rpc DeleteRequest (PostIdRequest) returns (EmptyRequest) {
    option (google.api.http) = {
      delete: "/posts/{id}"
    };
  };

  rpc GetCommentRequest (CommentIdRequest) returns (CommentResponse) {
    option(google.api.http) = {
      get: "/comments/{id}"
    };
  };

  rpc GetAllCommentsRequest (EmptyRequest) returns (CommentsResponse) {
    option(google.api.http) = {
      get: "/comments"
    };
  };

  rpc GetAllCommentsFromPostRequest (PostCommentsRequest) returns (CommentsResponse) {
    option(google.api.http) = {
      get: "/posts/{postId}/comments"
    };
  };

  rpc CreateCommentRequest (CommentRequest) returns (CommentResponse) {
    option(google.api.http) = {
      post: "/posts/{postId}/comments"
      body: "comment"
    };
  };

  rpc DeleteCommentRequest (CommentIdRequest) returns (EmptyRequest) {
    option (google.api.http) = {
      delete: "/comments/{id}"
    };
  };

  rpc GetReactionRequest (ReactionIdRequest) returns (ReactionResponse) {
    option(google.api.http) = {
      get: "/reactions/{id}"
    };
  };

  rpc GetAllReactionsRequest (EmptyRequest) returns (ReactionsResponse) {
    option(google.api.http) = {
      get: "/reaction"
    };
  };

  rpc GetAllReactionsFromPostRequest (PostReactionRequest) returns (ReactionsResponse) {
    option(google.api.http) = {
      get: "/posts/{postId}/reactions"
    };
  };

  rpc CreateReactionRequest (ReactionRequest) returns (ReactionResponse) {
    option(google.api.http) = {
      post: "/posts/{postId}/reactions"
      body: "reaction"
    };
  };

  rpc DeleteReactionRequest (ReactionIdRequest) returns (EmptyRequest) {
    option (google.api.http) = {
      delete: "/reactions/{id}"
    };
  };
}

message EmptyRequest {}

// POST

message Post {
  string id = 1;
  string userId = 2;
  string text = 3;
  repeated string links = 4;
  string creationDate = 5;
  string image = 6;
}

message PostIdRequest {
  string id = 1;
  string loggedUserId = 2;
}

message UserPostsRequest {
  string userId = 1;
  string loggedUserId = 2;
}

message PostResponse {
  Post post = 1;
}

message PostsResponse {
  repeated Post posts = 1;
}

message PostRequest {
  string id = 1;
  Post post = 2;
}

// COMMENT

message Comment {
  string id = 1;
  string userId = 2;
  string postId = 3;
  string text = 4;
  string creationDate = 5;
}

message CommentIdRequest {
  string id = 1;
  string loggedUserId = 2;
}

message PostCommentsRequest {
  string postId = 1;
  string loggedUserId = 2;
}

message CommentResponse {
  Comment comment = 1;
}

message CommentsResponse {
  repeated Comment comments = 1;
}

message CommentRequest {
  string id = 1;
  string postId = 2;
  Comment comment = 3;
  string loggedUserId = 4;
}

// REACTION

message Reaction {
  string id = 1;
  string userId = 2;
  string postId = 3;
  bool type = 4;
}

message ReactionIdRequest {
  string id = 1;
  string loggedUserId = 2;
}

message PostReactionRequest {
  string postId = 1;
  string loggedUserId = 2;
}

message ReactionResponse {
  Reaction reaction = 1;
}

message ReactionsResponse {
  repeated Reaction reactions = 1;
}

message ReactionRequest {
  string id = 1;
  string postId = 2;
  Reaction reaction = 3;
  string loggedUserId = 4;
}